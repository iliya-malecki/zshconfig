# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd)

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(
    git
    conda-zsh-completion     # https://github.com/conda-incubator/conda-zsh-completion
    zsh-autosuggestions      # https://github.com/zsh-users/zsh-autosuggestions
    command-not-found
    helm
    fast-syntax-highlighting
    fzf-tab
    zsh-shift-select
)

bindkey '^H' backward-kill-word
bindkey '^\' undo
copy-to-clipboard() {
  zle kill-region
  wl-copy "$CUTBUFFER"
}
zle -N copy-to-clipboard
bindkey '^[^X' copy-to-clipboard
function exit-shell() {
  exit 0
}
zle -N exit-shell
bindkey '^Q' exit-shell

source $ZSH/oh-my-zsh.sh
autoload -U compinit && compinit

zstyle ':completion:*' completer _expand_alias _complete _ignored
source /usr/share/doc/fzf/examples/key-bindings.zsh

{% if add_conda_config %}
# >>> conda initialize >>>
__conda_setup="$('{{ conda_dir }}/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{ conda_dir }}/etc/profile.d/conda.sh" ]; then
        . "{{ conda_dir }}/etc/profile.d/conda.sh"
    else
        export PATH="{{ conda_dir }}/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

[[ -d "$CONDA_PREFIX/envs" ]] && ls "$CONDA_PREFIX/envs" | grep -q "general" && conda activate general

# i dont enjoy global env discovery, that sounds like a disaster to me.
if [[ ! -L "$HOME/.conda/environments.txt" ]]; then
  rm $HOME/.conda/environments.txt
  ln -s /dev/null $HOME/.conda/environments.txt
fi

{% endif %}
export PATH=$HOME/bin:$PATH:/usr/local/go/bin
[[ ! -f "$HOME/.cargo/env" ]] || source "$HOME/.cargo/env"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f "$HOME/.p10k.zsh" ]] || source "$HOME/.p10k.zsh"

export PATH=$PATH:$HOME/.local/bin
# to add an exit code like this: ✘ 1
include_exit_code() {
  last=$?
  if [ $last -ne 0 ] && [ ${_exit_code_hook_cocked:=false} = "true" ]; then
    print "\e[1m\e[38;5;196m✘ $last \e[38;5;233mat $(date +'%y-%m-%d %H:%M:%S')\e[0m"
    typeset -g _exit_code_hook_cocked=false
  fi
}

preexec_hook() {
  # this doesnt run on no-ops, hence we avoid clutter
  typeset -g _exit_code_hook_cocked=true
}

autoload -Uz add-zsh-hook
add-zsh-hook preexec preexec_hook
add-zsh-hook precmd include_exit_code

######### ENV VARIABLES
export DOCKER_BUILDKIT=1

######### ALIASES
alias py="python"
alias i="conda install"
alias iforge="conda install -c conda-forge"
alias htop="htop -d5"
alias dind="docker run --rm -it --privileged --name dind docker:dind /bin/ash"
alias dive="docker run -it --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive"
alias mvd="mv ~/Downloads/"
alias base="conda activate base"
alias caffeine="ffplay -f lavfi -i color=#111111:size=1920x1080 -loop 0 -fs"
alias caffepipe="yt-dlp -o - UHKHPybcLuc | ffplay -fs -"
alias caffegnome="yt-dlp -o - UUEbmFbwejM | ffplay -fs -"

######### FUNCTIONS
codenew() {
    mkdir $1 && code $1
}
rwc() {
  find $1 -name '*.py' | xargs wc -l
}
load-env() {
    echo
    if [[ -f $1 ]]; then
        command=${@:2}
        vars=$(grep -v '^\s*#' "$1" | xargs)
        eval "$vars $command"
    else
        echo "File $1 not found."
    fi
}
switch() {
    cmd=$(fc -lrn 1 | grep -m 1 -P "^code [~/].*/$1$")
    if [ -z "$cmd" ]; then
        echo "No matching command found."
        return 1
    fi
    echo -e "Open \033[33m$cmd\033[0m? [Y/n]: "
    read -r response
    if [[ "$response" =~ ^[Yy]$ || -z "$response" ]]; then
        eval "$cmd"
    else
        return 1
    fi
}
